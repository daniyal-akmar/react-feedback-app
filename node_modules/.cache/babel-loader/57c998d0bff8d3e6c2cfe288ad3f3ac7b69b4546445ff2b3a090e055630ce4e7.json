{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\New React Practice\\\\traversy-media-course\\\\feedback-app\\\\src\\\\Context\\\\FeedbackContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackContext = /*#__PURE__*/createContext();\nexport const FeedbackProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [feedback, setFeedback] = useState([]);\n  const [FeedbackEdit, setFeedbackEdit] = useState({\n    item: {},\n    edit: false\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    getFeedback();\n  }, []);\n\n  // Fetch Feedback from server\n  const getFeedback = async () => {\n    const response = await fetch(\"/feedback?_sort=id&&_order=desc\");\n    const data = await response.json();\n    setFeedback(data);\n    setIsLoading(false);\n  };\n  const deleteFeedback = async id => {\n    if (window.confirm(\"Are you sure you want to delete?\")) {\n      await fetch(`/feedback/${id}`, {\n        method: \"DELETE\"\n      });\n      setFeedback(feedback.filter(item => item.id !== id));\n    }\n  };\n  const addFeedback = async obj => {\n    const response = await fetch(\"/feedback\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(obj)\n    });\n    const data = await response.json();\n    setFeedback([data, ...feedback]);\n  };\n  const updateFeedback = async (id, obj) => {\n    const response = await fetch(`/feedback/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(obj)\n    });\n    const data = await response.json();\n    setFeedback(feedback.map(item => item.id === id ? {\n      ...item,\n      ...obj\n    } : item));\n    setFeedbackEdit({\n      item: {},\n      edit: false\n    });\n  };\n  const editFeedback = item => {\n    setFeedbackEdit({\n      item: item,\n      edit: true\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(FeedbackContext.Provider, {\n    value: {\n      feedback,\n      FeedbackEdit,\n      isLoading,\n      deleteFeedback,\n      addFeedback,\n      editFeedback,\n      updateFeedback\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(FeedbackProvider, \"MS6gHUPgEkJ/9OtkgImLEzb7St8=\");\n_c = FeedbackProvider;\nexport default FeedbackContext;\nvar _c;\n$RefreshReg$(_c, \"FeedbackProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","v4","uuidv4","FeedbackContext","FeedbackProvider","children","feedback","setFeedback","FeedbackEdit","setFeedbackEdit","item","edit","isLoading","setIsLoading","getFeedback","response","fetch","data","json","deleteFeedback","id","window","confirm","method","filter","addFeedback","obj","headers","body","JSON","stringify","updateFeedback","map","editFeedback"],"sources":["C:/Users/DELL/Desktop/New React Practice/traversy-media-course/feedback-app/src/Context/FeedbackContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst FeedbackContext = createContext();\r\n\r\nexport const FeedbackProvider = ({ children }) => {\r\n    const [feedback, setFeedback] = useState([]);\r\n    const [FeedbackEdit, setFeedbackEdit] = useState({\r\n        item: {},\r\n        edit: false,\r\n    });\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        getFeedback();\r\n    }, []);\r\n\r\n    // Fetch Feedback from server\r\n    const getFeedback = async () => {\r\n        const response = await fetch(\"/feedback?_sort=id&&_order=desc\");\r\n        const data = await response.json();\r\n\r\n        setFeedback(data);\r\n        setIsLoading(false);\r\n    };\r\n\r\n    const deleteFeedback = async (id) => {\r\n        if (window.confirm(\"Are you sure you want to delete?\")) {\r\n            await fetch(`/feedback/${id}`, {\r\n                method: \"DELETE\",\r\n            });\r\n            setFeedback(feedback.filter((item) => item.id !== id));\r\n        }\r\n    };\r\n\r\n    const addFeedback = async (obj) => {\r\n        const response = await fetch(\"/feedback\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(obj),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        setFeedback([data, ...feedback]);\r\n    };\r\n\r\n    const updateFeedback = async (id, obj) => {\r\n        const response = await fetch(`/feedback/${id}`, {\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(obj),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        setFeedback(\r\n            feedback.map((item) =>\r\n                item.id === id ? { ...item, ...obj } : item\r\n            )\r\n        );\r\n        setFeedbackEdit({\r\n            item: {},\r\n            edit: false,\r\n        });\r\n    };\r\n\r\n    const editFeedback = (item) => {\r\n        setFeedbackEdit({\r\n            item: item,\r\n            edit: true,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <FeedbackContext.Provider\r\n            value={{\r\n                feedback,\r\n                FeedbackEdit,\r\n                isLoading,\r\n                deleteFeedback,\r\n                addFeedback,\r\n                editFeedback,\r\n                updateFeedback,\r\n            }}\r\n        >\r\n            {children}\r\n        </FeedbackContext.Provider>\r\n    );\r\n};\r\n\r\nexport default FeedbackContext;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}